<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <changeSet id="20250414002" author="Manuel">

        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            <![CDATA[

            UPDATE public.utm_logstash_filter
            SET logstash_filter='filter {
			#Filter version 1.3.0
			#Support json input
			#Fields where extracted based on https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry
			if [message] {
			  json {
				  source => "message"
			  }
			}
			if [resource][type] and [resource][labels][project_id] or [protoPayload][@type]{
				#Generating dataType and dataSource fields
				mutate {
					add_field => {
						"dataType" => "google"
					}
				}
			  if ([@metadata][dataSource]) {
				mutate {
					#Add based on metadata
					add_field => {
						"dataSource" => "%{[@metadata][dataSource]}"
					}
					add_field => {
						"[logx][tenant]" => "%{[@metadata][dataSource]}"
					}
				}
			  }
				mutate {
						#Non variable fields, without fields inside
						rename => { "[logName]" => "[logx][google][logName]" }
						rename => { "[timestamp]" => "[logx][google][timestamp]" }
						rename => { "[receiveTimestamp]" => "[logx][google][receiveTimestamp]" }
						rename => { "[severity]" => "[logx][google][severityLabel]" }
						rename => { "[insertId]" => "[logx][google][insertId]" }
						rename => { "[trace]" => "[logx][google][trace]" }
						rename => { "[spanId]" => "[logx][google][spanId]" }
						rename => { "[traceSampled]" => "[logx][google][traceSampled]" }
						rename => { "[message]" => "[logx][google][message]" }

						#Non variable fields, with other fields inside
						#httpRequest
						rename => { "[httpRequest][requestMethod]" => "[logx][google][requestMethod]" }
						rename => { "[httpRequest][requestUrl]" => "[logx][google][requestUrl]" }
						rename => { "[httpRequest][requestSize]" => "[logx][google][requestSize]" }
						rename => { "[httpRequest][status]" => "[logx][google][status]" }
						rename => { "[httpRequest][responseSize]" => "[logx][google][responseSize]" }
						rename => { "[httpRequest][userAgent]" => "[logx][google][userAgent]" }
						rename => { "[httpRequest][serverIp]" => "[logx][google][dest_ip]" }
						rename => { "[httpRequest][referer]" => "[logx][google][referer]" }
						rename => { "[httpRequest][latency]" => "[logx][google][latency]" }
						rename => { "[httpRequest][cacheLookup]" => "[logx][google][cacheLookup]" }
						rename => { "[httpRequest][cacheHit]" => "[logx][google][cacheHit]" }
						rename => { "[httpRequest][cacheValidatedWithOriginServer]" => "[logx][google][cacheValidatedWithOriginServer]" }
						rename => { "[httpRequest][cacheFillBytes]" => "[logx][google][cacheFillBytes]" }
						rename => { "[httpRequest][protocol]" => "[logx][google][proto]" }
						#operation
						rename => { "[operation][id]" => "[logx][google][operation_id]" }
						rename => { "[operation][producer]" => "[logx][google][producer]" }
						rename => { "[operation][first]" => "[logx][google][first]" }
						rename => { "[operation][last]" => "[logx][google][last]" }
						#sourceLocation
						rename => { "[sourceLocation][file]" => "[logx][google][file]" }
						rename => { "[sourceLocation][line]" => "[logx][google][line]" }
						rename => { "[sourceLocation][function]" => "[logx][google][function]" }

						#Fields with variable content, stay the same as in the source
						rename => { "[resource]" => "[logx][google][resource]" }
						rename => { "[labels]" => "[logx][google][labels]" }

						#Union payload field, variants, stay the same as in the source
						rename => { "[jsonPayload]" => "[logx][google][jsonPayload]" }
						rename => { "[protoPayload]" => "[logx][google][protoPayload]" }
						rename => { "[textPayload]" => "[logx][google][textPayload]" }

				}
		#............................................................................................
		#Generate src_ip used in correlation engine
		  if [logx][google][protoPayload][requestMetadata][callerIp] {
			  mutate {
				rename => { "[httpRequest][remoteIp]" => "[logx][google][remoteIp]" }
				rename => { "[logx][google][protoPayload][requestMetadata][callerIp]" => "[logx][google][src_ip]" }
			  }
		  } else {
			  mutate {
				rename => { "[httpRequest][remoteIp]" => "[logx][google][src_ip]" }
			  }
		  }

			#Finally remove unused fields
			mutate {
				remove_field => ["path","@version","httpRequest","operation","sourceLocation"]
			}
		  }
		}',
            filter_version='1.3.0'
            WHERE id=1301;

            ]]>
        </sql>
    </changeSet>
</databaseChangeLog>
